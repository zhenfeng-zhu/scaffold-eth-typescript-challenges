/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YourCollectible,
  YourCollectibleInterface,
} from "../YourCollectible";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600f81526e596f7572436f6c6c65637469626c6560881b6020808301918252835180850190945260038452622ca1a160e91b9084015281519192916200006491600091620000f3565b5080516200007a906001906020840190620000f3565b50505062000097620000916200009d60201b60201c565b620000a1565b620001d6565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600181811c90821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b611d1a80620001e66000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb4651461026a578063b88d4fde1461027d578063c87b56dd14610290578063e985e9c5146102a3578063f2fde38b146102df57600080fd5b80636352211e1461022357806370a0823114610236578063715018a6146102495780638da5cb5b1461025157806395d89b411461026257600080fd5b806318160ddd116100f457806318160ddd146101cf57806323b872dd146101d75780632f745c59146101ea57806342842e0e146101fd5780634f6ccce71461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b314610199578063110bcd45146101ae575b600080fd5b61014461013f3660046119e6565b6102f2565b60405190151581526020015b60405180910390f35b610161610303565b6040516101509190611ad1565b61018161017c366004611a20565b610395565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046119bc565b610422565b005b6101c16101bc36600461195a565b610538565b604051908152602001610150565b6008546101c1565b6101ac6101e5366004611866565b610570565b6101c16101f83660046119bc565b6105a1565b6101ac61020b366004611866565b610637565b6101c161021e366004611a20565b610652565b610181610231366004611a20565b6106e5565b6101c1610244366004611818565b61075c565b6101ac6107e3565b600b546001600160a01b0316610181565b610161610849565b6101ac61027836600461191e565b610858565b6101ac61028b3660046118a2565b61091d565b61016161029e366004611a20565b610955565b6101446102b1366004611833565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102ed366004611818565b610960565b60006102fd82610a2b565b92915050565b60606000805461031290611bf6565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90611bf6565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050905090565b60006103a082610a50565b6104065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061042d826106e5565b9050806001600160a01b0316836001600160a01b0316141561049b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103fd565b336001600160a01b03821614806104b757506104b781336102b1565b6105295760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103fd565b6105338383610a6d565b505050565b6000610548600c80546001019055565b6000610553600c5490565b905061055f8482610adb565b6105698184610c1a565b9392505050565b61057a3382610ca5565b6105965760405162461bcd60e51b81526004016103fd90611b36565b610533838383610d8f565b60006105ac8361075c565b821061060e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105338383836040518060200160405280600081525061091d565b600061065d60085490565b82106106c05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103fd565b600882815481106106d3576106d3611ca2565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103fd565b60006001600160a01b0382166107c75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103fd565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b0316331461083d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6108476000610f3a565b565b60606001805461031290611bf6565b6001600160a01b0382163314156108b15760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103fd565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109273383610ca5565b6109435760405162461bcd60e51b81526004016103fd90611b36565b61094f84848484610f8c565b50505050565b60606102fd82610fbf565b600b546001600160a01b031633146109ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6001600160a01b038116610a1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fd565b610a2881610f3a565b50565b60006001600160e01b0319821663780e9d6360e01b14806102fd57506102fd8261114b565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610aa2826106e5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610b315760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103fd565b610b3a81610a50565b15610b875760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103fd565b610b936000838361119b565b6001600160a01b0382166000908152600360205260408120805460019290610bbc908490611b87565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610c2382610a50565b610c865760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103fd565b6000828152600a602090815260409091208251610533928401906116ed565b6000610cb082610a50565b610d115760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103fd565b6000610d1c836106e5565b9050806001600160a01b0316846001600160a01b03161480610d575750836001600160a01b0316610d4c84610395565b6001600160a01b0316145b80610d8757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610da2826106e5565b6001600160a01b031614610e0a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103fd565b6001600160a01b038216610e6c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103fd565b610e7783838361119b565b610e82600082610a6d565b6001600160a01b0383166000908152600360205260408120805460019290610eab908490611bb3565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ed9908490611b87565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f97848484610d8f565b610fa3848484846111a6565b61094f5760405162461bcd60e51b81526004016103fd90611ae4565b6060610fca82610a50565b6110305760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103fd565b6000828152600a60205260408120805461104990611bf6565b80601f016020809104026020016040519081016040528092919081815260200182805461107590611bf6565b80156110c25780601f10611097576101008083540402835291602001916110c2565b820191906000526020600020905b8154815290600101906020018083116110a557829003601f168201915b5050505050905060006110fd60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b9050805160001415611110575092915050565b81511561114257808260405160200161112a929190611a65565b60405160208183030381529060405292505050919050565b610d87846112b3565b60006001600160e01b031982166380ac58cd60e01b148061117c57506001600160e01b03198216635b5e139f60e01b145b806102fd57506301ffc9a760e01b6001600160e01b03198316146102fd565b6105338383836113a7565b60006001600160a01b0384163b156112a857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111ea903390899088908890600401611a94565b602060405180830381600087803b15801561120457600080fd5b505af1925050508015611234575060408051601f3d908101601f1916820190925261123191810190611a03565b60015b61128e573d808015611262576040519150601f19603f3d011682016040523d82523d6000602084013e611267565b606091505b5080516112865760405162461bcd60e51b81526004016103fd90611ae4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d87565b506001949350505050565b60606112be82610a50565b6113225760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103fd565b600061135660408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b905060008151116113765760405180602001604052806000815250610569565b806113808461145f565b604051602001611391929190611a65565b6040516020818303038152906040529392505050565b6001600160a01b038316611402576113fd81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611425565b816001600160a01b0316836001600160a01b03161461142557611425838261155d565b6001600160a01b03821661143c57610533816115fa565b826001600160a01b0316826001600160a01b0316146105335761053382826116a9565b6060816114835750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114ad578061149781611c31565b91506114a69050600a83611b9f565b9150611487565b60008167ffffffffffffffff8111156114c8576114c8611cb8565b6040519080825280601f01601f1916602001820160405280156114f2576020820181803683370190505b5090505b8415610d8757611507600183611bb3565b9150611514600a86611c4c565b61151f906030611b87565b60f81b81838151811061153457611534611ca2565b60200101906001600160f81b031916908160001a905350611556600a86611b9f565b94506114f6565b6000600161156a8461075c565b6115749190611bb3565b6000838152600760205260409020549091508082146115c7576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061160c90600190611bb3565b6000838152600960205260408120546008805493945090928490811061163457611634611ca2565b90600052602060002001549050806008838154811061165557611655611ca2565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061168d5761168d611c8c565b6001900381819060005260206000200160009055905550505050565b60006116b48361075c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546116f990611bf6565b90600052602060002090601f01602090048101928261171b5760008555611761565b82601f1061173457805160ff1916838001178555611761565b82800160010185558215611761579182015b82811115611761578251825591602001919060010190611746565b5061176d929150611771565b5090565b5b8082111561176d5760008155600101611772565b600067ffffffffffffffff808411156117a1576117a1611cb8565b604051601f8501601f19908116603f011681019082821181831017156117c9576117c9611cb8565b816040528093508581528686860111156117e257600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461181357600080fd5b919050565b60006020828403121561182a57600080fd5b610569826117fc565b6000806040838503121561184657600080fd5b61184f836117fc565b915061185d602084016117fc565b90509250929050565b60008060006060848603121561187b57600080fd5b611884846117fc565b9250611892602085016117fc565b9150604084013590509250925092565b600080600080608085870312156118b857600080fd5b6118c1856117fc565b93506118cf602086016117fc565b925060408501359150606085013567ffffffffffffffff8111156118f257600080fd5b8501601f8101871361190357600080fd5b61191287823560208401611786565b91505092959194509250565b6000806040838503121561193157600080fd5b61193a836117fc565b91506020830135801515811461194f57600080fd5b809150509250929050565b6000806040838503121561196d57600080fd5b611976836117fc565b9150602083013567ffffffffffffffff81111561199257600080fd5b8301601f810185136119a357600080fd5b6119b285823560208401611786565b9150509250929050565b600080604083850312156119cf57600080fd5b6119d8836117fc565b946020939093013593505050565b6000602082840312156119f857600080fd5b813561056981611cce565b600060208284031215611a1557600080fd5b815161056981611cce565b600060208284031215611a3257600080fd5b5035919050565b60008151808452611a51816020860160208601611bca565b601f01601f19169290920160200192915050565b60008351611a77818460208801611bca565b835190830190611a8b818360208801611bca565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ac790830184611a39565b9695505050505050565b6020815260006105696020830184611a39565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611b9a57611b9a611c60565b500190565b600082611bae57611bae611c76565b500490565b600082821015611bc557611bc5611c60565b500390565b60005b83811015611be5578181015183820152602001611bcd565b8381111561094f5750506000910152565b600181811c90821680611c0a57607f821691505b60208210811415611c2b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c4557611c45611c60565b5060010190565b600082611c5b57611c5b611c76565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a2857600080fdfea264697066735822122032afef82ec372ce6c734174635e561b00ae1637965911851239d6576dc58ad8f64736f6c63430008060033";

export class YourCollectible__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourCollectible> {
    return super.deploy(overrides || {}) as Promise<YourCollectible>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourCollectible {
    return super.attach(address) as YourCollectible;
  }
  connect(signer: Signer): YourCollectible__factory {
    return super.connect(signer) as YourCollectible__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourCollectibleInterface {
    return new utils.Interface(_abi) as YourCollectibleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourCollectible {
    return new Contract(address, _abi, signerOrProvider) as YourCollectible;
  }
}
